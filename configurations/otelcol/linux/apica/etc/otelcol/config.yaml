receivers:
  otlp:
    protocols:
      grpc:
      http:
  hostmetrics:
    collection_interval: 60s
    scrapers:
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
      memory:
        metrics:
          system.linux.memory.available:
            enabled: true
          system.memory.utilization:
            enabled: true
      disk:
      network:
      load:
      filesystem:
        include_virtual_filesystems: true
        metrics:
          system.filesystem.inodes.usage:
            enabled: true
          system.filesystem.usage:
            enabled: true
          system.filesystem.utilization:
            enabled: true
      paging:
      processes:
  prometheus:
    config:
      scrape_configs:
        - job_name: 'prom-metrics-collector'
          scrape_interval: 60s
          static_configs:
            - targets: ['0.0.0.0:9464']
processors:
  resource/os:
    attributes:
      - key: ostype
        value: "linux"
        action: upsert
exporters:
  debug:
    verbosity: detailed
  prometheus:
    endpoint: 0.0.0.0:9464
  prometheusremotewrite/apicametrics:
    endpoint: "{{$ .Agent.secret.apicametrics.endpoint }}"
    tls:
      insecure: false
      insecure_skip_verify: true
    resource_to_telemetry_conversion:
      enabled: true # Convert resource attributes to metric labels
extensions:
service:
  extensions:
  pipelines:
    metrics:
      receivers: [otlp, hostmetrics]
      exporters: [prometheus]
    metrics/out:
      receivers: [prometheus]
      processors: [resource/os]
      exporters: [prometheusremotewrite/apicametrics]
